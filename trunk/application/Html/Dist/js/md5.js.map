{"version":3,"sources":["md5.js"],"names":["$","safe_add","x","y","lsw","msw","bit_rol","num","cnt","md5_cmn","q","a","b","s","t","md5_ff","c","d","md5_gg","md5_hh","md5_ii","binl_md5","len","i","olda","oldb","oldc","oldd","length","binl2rstr","input","output","String","fromCharCode","rstr2binl","undefined","charCodeAt","rstr_md5","rstr_hmac_md5","key","data","hash","bkey","ipad","opad","concat","rstr2hex","hex_tab","charAt","str2rstr_utf8","unescape","encodeURIComponent","raw_md5","hex_md5","raw_hmac_md5","k","hex_hmac_md5","md5","string","raw","define","amd","this"],"mappings":"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","file":"md5.js","sourcesContent":["/*\r\n * JavaScript MD5 1.0.1\r\n * https://github.com/blueimp/JavaScript-MD5\r\n *\r\n * Copyright 2011, Sebastian Tschan\r\n * https://blueimp.net\r\n *\r\n * Licensed under the MIT license:\r\n * http://www.opensource.org/licenses/MIT\r\n * \r\n * Based on\r\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\r\n * Digest Algorithm, as defined in RFC 1321.\r\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\r\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\r\n * Distributed under the BSD License\r\n * See http://pajhome.org.uk/crypt/md5 for more info.\r\n */\r\n\r\n/*jslint bitwise: true */\r\n/*global unescape, define */\r\n\r\n(function ($) {\r\n    'use strict';\r\n\r\n    /*\r\n    * Add integers, wrapping at 2^32. This uses 16-bit operations internally\r\n    * to work around bugs in some JS interpreters.\r\n    */\r\n    function safe_add(x, y) {\r\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF),\r\n            msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n        return (msw << 16) | (lsw & 0xFFFF);\r\n    }\r\n\r\n    /*\r\n    * Bitwise rotate a 32-bit number to the left.\r\n    */\r\n    function bit_rol(num, cnt) {\r\n        return (num << cnt) | (num >>> (32 - cnt));\r\n    }\r\n\r\n    /*\r\n    * These functions implement the four basic operations the algorithm uses.\r\n    */\r\n    function md5_cmn(q, a, b, x, s, t) {\r\n        return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);\r\n    }\r\n    function md5_ff(a, b, c, d, x, s, t) {\r\n        return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\r\n    }\r\n    function md5_gg(a, b, c, d, x, s, t) {\r\n        return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\r\n    }\r\n    function md5_hh(a, b, c, d, x, s, t) {\r\n        return md5_cmn(b ^ c ^ d, a, b, x, s, t);\r\n    }\r\n    function md5_ii(a, b, c, d, x, s, t) {\r\n        return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\r\n    }\r\n\r\n    /*\r\n    * Calculate the MD5 of an array of little-endian words, and a bit length.\r\n    */\r\n    function binl_md5(x, len) {\r\n        /* append padding */\r\n        x[len >> 5] |= 0x80 << (len % 32);\r\n        x[(((len + 64) >>> 9) << 4) + 14] = len;\r\n\r\n        var i, olda, oldb, oldc, oldd,\r\n            a =  1732584193,\r\n            b = -271733879,\r\n            c = -1732584194,\r\n            d =  271733878;\r\n\r\n        for (i = 0; i < x.length; i += 16) {\r\n            olda = a;\r\n            oldb = b;\r\n            oldc = c;\r\n            oldd = d;\r\n\r\n            a = md5_ff(a, b, c, d, x[i],       7, -680876936);\r\n            d = md5_ff(d, a, b, c, x[i +  1], 12, -389564586);\r\n            c = md5_ff(c, d, a, b, x[i +  2], 17,  606105819);\r\n            b = md5_ff(b, c, d, a, x[i +  3], 22, -1044525330);\r\n            a = md5_ff(a, b, c, d, x[i +  4],  7, -176418897);\r\n            d = md5_ff(d, a, b, c, x[i +  5], 12,  1200080426);\r\n            c = md5_ff(c, d, a, b, x[i +  6], 17, -1473231341);\r\n            b = md5_ff(b, c, d, a, x[i +  7], 22, -45705983);\r\n            a = md5_ff(a, b, c, d, x[i +  8],  7,  1770035416);\r\n            d = md5_ff(d, a, b, c, x[i +  9], 12, -1958414417);\r\n            c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);\r\n            b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\r\n            a = md5_ff(a, b, c, d, x[i + 12],  7,  1804603682);\r\n            d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\r\n            c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\r\n            b = md5_ff(b, c, d, a, x[i + 15], 22,  1236535329);\r\n\r\n            a = md5_gg(a, b, c, d, x[i +  1],  5, -165796510);\r\n            d = md5_gg(d, a, b, c, x[i +  6],  9, -1069501632);\r\n            c = md5_gg(c, d, a, b, x[i + 11], 14,  643717713);\r\n            b = md5_gg(b, c, d, a, x[i],      20, -373897302);\r\n            a = md5_gg(a, b, c, d, x[i +  5],  5, -701558691);\r\n            d = md5_gg(d, a, b, c, x[i + 10],  9,  38016083);\r\n            c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\r\n            b = md5_gg(b, c, d, a, x[i +  4], 20, -405537848);\r\n            a = md5_gg(a, b, c, d, x[i +  9],  5,  568446438);\r\n            d = md5_gg(d, a, b, c, x[i + 14],  9, -1019803690);\r\n            c = md5_gg(c, d, a, b, x[i +  3], 14, -187363961);\r\n            b = md5_gg(b, c, d, a, x[i +  8], 20,  1163531501);\r\n            a = md5_gg(a, b, c, d, x[i + 13],  5, -1444681467);\r\n            d = md5_gg(d, a, b, c, x[i +  2],  9, -51403784);\r\n            c = md5_gg(c, d, a, b, x[i +  7], 14,  1735328473);\r\n            b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\r\n\r\n            a = md5_hh(a, b, c, d, x[i +  5],  4, -378558);\r\n            d = md5_hh(d, a, b, c, x[i +  8], 11, -2022574463);\r\n            c = md5_hh(c, d, a, b, x[i + 11], 16,  1839030562);\r\n            b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\r\n            a = md5_hh(a, b, c, d, x[i +  1],  4, -1530992060);\r\n            d = md5_hh(d, a, b, c, x[i +  4], 11,  1272893353);\r\n            c = md5_hh(c, d, a, b, x[i +  7], 16, -155497632);\r\n            b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\r\n            a = md5_hh(a, b, c, d, x[i + 13],  4,  681279174);\r\n            d = md5_hh(d, a, b, c, x[i],      11, -358537222);\r\n            c = md5_hh(c, d, a, b, x[i +  3], 16, -722521979);\r\n            b = md5_hh(b, c, d, a, x[i +  6], 23,  76029189);\r\n            a = md5_hh(a, b, c, d, x[i +  9],  4, -640364487);\r\n            d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\r\n            c = md5_hh(c, d, a, b, x[i + 15], 16,  530742520);\r\n            b = md5_hh(b, c, d, a, x[i +  2], 23, -995338651);\r\n\r\n            a = md5_ii(a, b, c, d, x[i],       6, -198630844);\r\n            d = md5_ii(d, a, b, c, x[i +  7], 10,  1126891415);\r\n            c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\r\n            b = md5_ii(b, c, d, a, x[i +  5], 21, -57434055);\r\n            a = md5_ii(a, b, c, d, x[i + 12],  6,  1700485571);\r\n            d = md5_ii(d, a, b, c, x[i +  3], 10, -1894986606);\r\n            c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\r\n            b = md5_ii(b, c, d, a, x[i +  1], 21, -2054922799);\r\n            a = md5_ii(a, b, c, d, x[i +  8],  6,  1873313359);\r\n            d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\r\n            c = md5_ii(c, d, a, b, x[i +  6], 15, -1560198380);\r\n            b = md5_ii(b, c, d, a, x[i + 13], 21,  1309151649);\r\n            a = md5_ii(a, b, c, d, x[i +  4],  6, -145523070);\r\n            d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\r\n            c = md5_ii(c, d, a, b, x[i +  2], 15,  718787259);\r\n            b = md5_ii(b, c, d, a, x[i +  9], 21, -343485551);\r\n\r\n            a = safe_add(a, olda);\r\n            b = safe_add(b, oldb);\r\n            c = safe_add(c, oldc);\r\n            d = safe_add(d, oldd);\r\n        }\r\n        return [a, b, c, d];\r\n    }\r\n\r\n    /*\r\n    * Convert an array of little-endian words to a string\r\n    */\r\n    function binl2rstr(input) {\r\n        var i,\r\n            output = '';\r\n        for (i = 0; i < input.length * 32; i += 8) {\r\n            output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF);\r\n        }\r\n        return output;\r\n    }\r\n\r\n    /*\r\n    * Convert a raw string to an array of little-endian words\r\n    * Characters >255 have their high-byte silently ignored.\r\n    */\r\n    function rstr2binl(input) {\r\n        var i,\r\n            output = [];\r\n        output[(input.length >> 2) - 1] = undefined;\r\n        for (i = 0; i < output.length; i += 1) {\r\n            output[i] = 0;\r\n        }\r\n        for (i = 0; i < input.length * 8; i += 8) {\r\n            output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32);\r\n        }\r\n        return output;\r\n    }\r\n\r\n    /*\r\n    * Calculate the MD5 of a raw string\r\n    */\r\n    function rstr_md5(s) {\r\n        return binl2rstr(binl_md5(rstr2binl(s), s.length * 8));\r\n    }\r\n\r\n    /*\r\n    * Calculate the HMAC-MD5, of a key and some data (raw strings)\r\n    */\r\n    function rstr_hmac_md5(key, data) {\r\n        var i,\r\n            bkey = rstr2binl(key),\r\n            ipad = [],\r\n            opad = [],\r\n            hash;\r\n        ipad[15] = opad[15] = undefined;\r\n        if (bkey.length > 16) {\r\n            bkey = binl_md5(bkey, key.length * 8);\r\n        }\r\n        for (i = 0; i < 16; i += 1) {\r\n            ipad[i] = bkey[i] ^ 0x36363636;\r\n            opad[i] = bkey[i] ^ 0x5C5C5C5C;\r\n        }\r\n        hash = binl_md5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);\r\n        return binl2rstr(binl_md5(opad.concat(hash), 512 + 128));\r\n    }\r\n\r\n    /*\r\n    * Convert a raw string to a hex string\r\n    */\r\n    function rstr2hex(input) {\r\n        var hex_tab = '0123456789abcdef',\r\n            output = '',\r\n            x,\r\n            i;\r\n        for (i = 0; i < input.length; i += 1) {\r\n            x = input.charCodeAt(i);\r\n            output += hex_tab.charAt((x >>> 4) & 0x0F) +\r\n                hex_tab.charAt(x & 0x0F);\r\n        }\r\n        return output;\r\n    }\r\n\r\n    /*\r\n    * Encode a string as utf-8\r\n    */\r\n    function str2rstr_utf8(input) {\r\n        return unescape(encodeURIComponent(input));\r\n    }\r\n\r\n    /*\r\n    * Take string arguments and return either raw or hex encoded strings\r\n    */\r\n    function raw_md5(s) {\r\n        return rstr_md5(str2rstr_utf8(s));\r\n    }\r\n    function hex_md5(s) {\r\n        return rstr2hex(raw_md5(s));\r\n    }\r\n    function raw_hmac_md5(k, d) {\r\n        return rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d));\r\n    }\r\n    function hex_hmac_md5(k, d) {\r\n        return rstr2hex(raw_hmac_md5(k, d));\r\n    }\r\n\r\n    function md5(string, key, raw) {\r\n        if (!key) {\r\n            if (!raw) {\r\n                return hex_md5(string);\r\n            }\r\n            return raw_md5(string);\r\n        }\r\n        if (!raw) {\r\n            return hex_hmac_md5(key, string);\r\n        }\r\n        return raw_hmac_md5(key, string);\r\n    }\r\n\r\n    if (typeof define === 'function' && define.amd) {\r\n        define(function () {\r\n            return md5;\r\n        });\r\n    } else {\r\n        $.md5 = md5;\r\n    }\r\n}(this));"]}